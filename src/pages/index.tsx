import { type NextPage } from "next";
import { useState } from "react";
import NavBar from "~/components/NavBar";
import Head from "next/head";
import Link from "next/link";
import { useUser } from "@clerk/nextjs";

import { api } from "~/utils/api";
type Quote = {
  author: string;
  text: string;
  date: string;
  comment: string;
};

const Home: NextPage = () => {
  const user = useUser();
  const createQuote = api.quote.create.useMutation();
  const [quote, setQuote] = useState<Quote>({
    author: "",
    text: "",
    date: "",
    comment: "",
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    createQuote.mutate({ ...quote });
  };

  return (
    <>
      <Head>
        <title>Quizzote</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="flex-start pb-6 text-3xl text-white">
          {user.isSignedIn && <h2>Welcome back, {user.user.firstName}!</h2>}
        </div>

        <form onSubmit={handleSubmit}>
          <div className="mb-6">
            <label
              htmlFor="author"
              className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
            >
              Who said it?
            </label>
            <input
              type="text"
              id="author"
              onChange={(e) => {
                setQuote({ ...quote, author: e.target.value });
              }}
              className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              placeholder="Michael Scott"
              required
            />
          </div>
          <div className="mb-6">
            <label
              htmlFor="text"
              className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
            >
              What did they say?
            </label>
            <textarea
              id="text"
              onChange={(e) => {
                setQuote({ ...quote, text: e.target.value });
              }}
              className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              placeholder="The worst thing about prison was the dementors. They were flying all over the place and they were scary and then they'd come down and they'd suck the soul out of your body and it hurt!"
              required
            />
          </div>
          <div className="mb-6">
            <label
              htmlFor="date"
              className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
            >
              Who said it?
            </label>
            <input
              type="date"
              id="date"
              onChange={(e) => {
                setQuote({ ...quote, date: e.target.value });
              }}
              className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              required
            />
          </div>
          <div className="mb-6">
            <label
              htmlFor="comment"
              className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
            >
              Context
            </label>
            <input
              type="text"
              id="comment"
              onChange={(e) => {
                setQuote({ ...quote, comment: e.target.value });
              }}
              className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              placeholder="In the break room"
              required
            />
          </div>

          <button
            type="submit"
            className="w-full rounded-lg bg-blue-700 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 sm:w-auto"
          >
            Submit
          </button>
        </form>
      </main>
    </>
  );
};

export default Home;
